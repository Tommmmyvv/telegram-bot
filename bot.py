@app.route('/webhook', methods=['GET', 'POST'])
def webhook():
    try:
        if request.method == 'GET':
            return jsonify({
                'status': 'webhook is working',
                'method': 'GET'
            })
            
        print("\n=== REQUEST INFO ===")
        print("Headers:", dict(request.headers))
        print("Method:", request.method)
        print("Content-Type:", request.content_type)
        
        data = request.json
        print("\n=== WEBHOOK DATA ===")
        print("Raw data:", json.dumps(data, indent=2))
        
        if isinstance(data, list) and len(data) > 0:
            event = data[0]
            contact = event.get('contact', {})
            variables = contact.get('variables', {})
            event_type = event.get('title')
            
            print("\n=== EVENT INFO ===")
            print("Event type:", event_type)
            print("Contact:", json.dumps(contact, indent=2))
            print("Variables:", json.dumps(variables, indent=2))
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            username = contact.get('username') or contact.get('telegram_id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            name = contact.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            last_message = contact.get('last_message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')
            
            print("\n=== USER INFO ===")
            print(f"Username: {username}")
            print(f"Name: {name}")
            print(f"Last message: {last_message}")
            
            # –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            message = f"""
üìù <b>–ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –±–æ—Ç–µ</b>

–¢–∏–ø —Å–æ–±—ã—Ç–∏—è: {event_type}
üë§ –ò–º—è: {name}
üì± Telegram: {username}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {last_message}
üîÑ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {json.dumps(variables, ensure_ascii=False)}
‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
                
            print("\n=== SENDING MESSAGE ===")
            print("Chat ID:", chat_id)
            print("Message:", message)
            
            try:
                bot.send_message(chat_id, message, parse_mode='HTML')
                print("Message sent successfully")
            except Exception as e:
                print(f"Error sending message: {str(e)}")
                
        return jsonify({'status': 'success', 'message': 'Webhook processed'})
    except Exception as e:
        print(f"\n=== ERROR ===")
        print(f"Error in webhook: {str(e)}")
        import traceback
        print(f"Traceback: {traceback.format_exc()}")
        return jsonify({'status': 'error', 'error': str(e)}), 500
