# ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ ...

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.json
    
    if isinstance(data, list) and len(data) > 0:
        event = data[0]
        contact = event.get('contact', {})
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        username = contact.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        name = contact.get('variables', {}).get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        event_type = event.get('title')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è
        if event_type == 'new_subscriber':
            message = f"""
üéâ <b>–ù–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫!</b>
üë§ –ò–º—è: {name}
üì± Telegram: @{username}
‚è∞ –í—Ä–µ–º—è: {datetime.fromtimestamp(event.get('date', 0)/1000).strftime('%Y-%m-%d %H:%M:%S')}
"""
        elif event_type == 'run_custom_flow':
            selected_option = contact.get('variables', {}).get('selected_option', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            message = f"""
üîÑ <b>–°–¥–µ–ª–∞–Ω –≤—ã–±–æ—Ä!</b>
üë§ –ò–º—è: {name}
üì± Telegram: @{username}
üéØ –í—ã–±—Ä–∞–ª: {selected_option}
‚è∞ –í—Ä–µ–º—è: {datetime.fromtimestamp(event.get('date', 0)/1000).strftime('%Y-%m-%d %H:%M:%S')}
"""
        else:
            message = f"""
‚ÑπÔ∏è <b>–ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ SendPulse</b>
–¢–∏–ø: {event_type}
üë§ –ò–º—è: {name}
üì± Telegram: @{username}
‚è∞ –í—Ä–µ–º—è: {datetime.fromtimestamp(event.get('date', 0)/1000).strftime('%Y-%m-%d %H:%M:%S')}
"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
        bot.send_message(TELEGRAM_CHAT_ID, message, parse_mode='HTML')
        
    return 'OK'

# ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ ...
